plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def flutterProperties = new Properties()
def flutterPropertiesFile = rootProject.file("flutter.properties")
if (flutterPropertiesFile.exists()) {
    flutterPropertiesFile.withReader("UTF-8") { reader ->
        flutterProperties.load(reader)
    }
}

def flutterCompileSdkVersion = flutterProperties.getProperty("flutter.compileSdkVersion")
if (flutterCompileSdkVersion == null) {
    flutterCompileSdkVersion = "34"
}

def flutterVersionCode = flutterProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = flutterProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def flutterTargetSdkVersion = flutterProperties.getProperty("flutter.targetSdkVersion")
if (flutterTargetSdkVersion == null) {
    flutterTargetSdkVersion = "34"
}

def flutterMinSdkVersion = flutterProperties.getProperty("flutter.minSdkVersion")
if (flutterMinSdkVersion == null) {
    flutterMinSdkVersion = "28"
}

android {
    namespace = "com.pdouvch.sandboxflutter"
    compileSdk = flutterCompileSdkVersion.toInteger()
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.pdouvch.sandboxflutter"
        minSdk = flutterMinSdkVersion.toInteger()
        targetSdk = flutterTargetSdkVersion.toInteger()
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
